{"version":3,"sources":["hooks/useFetch.js","component/Word.js","component/Day.js","component/DayList.js","component/Header.js","component/EmptyPage.js","component/CreateWord.js","component/CreateDay.js","App.js","reportWebVitals.js","index.js"],"names":["useFetch","url","useState","data","setData","useEffect","fetch","then","res","json","Word","w","word","setWord","isShow","setIsShow","isDone","setIsDone","id","className","type","checked","onChange","method","headers","body","JSON","stringify","ok","eng","kor","onClick","window","confirm","Day","day","useParams","words","length","map","DayList","days","to","Header","EmptyPage","CreateWord","history","useHistory","isLoading","setIsLoading","engRef","useRef","korRef","dayRef","onSubmit","e","preventDefault","current","value","alert","push","placeholder","ref","style","opacity","CreateDay","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0181aa1b.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\n\nexport default function useFetch(url){\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch(url)\n    .then(res => {\n      return res.json()\n    })\n    .then(data => {\n      setData(data);\n    })\n  }, [url]);\n\n  return data;\n}","import { useState } from 'react';\n\nexport default function Word({ word: w }){\n  const [word, setWord] = useState(w);\n  const [isShow, setIsShow] = useState(false);\n  const [isDone, setIsDone] = useState(word.isDone);\n\n  function toggleShow(){\n    setIsShow(!isShow);\n  }\n\n  function toggleDone(){\n    // setIsDone(!isDone);\n    fetch(`http://localhost:3001/words/${word.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        ...word,\n        isDone: !isDone,\n      }),\n    })\n    .then(res =>{\n      if(res.ok){\n        setIsDone(!isDone);\n      }\n    })\n  }\n\n  function del(){\n    if(window.confirm('삭제하시겠습니까?')){\n      fetch(`http://localhost:3001/words/${word.id}`, {\n        method: \"DELETE\"\n      }).then(res => {\n        if (res.ok){\n          setWord({ id: 0 });\n        }\n      })\n    }\n  }\n\n  if (word.id === 0){\n    return null;\n  }\n\n  return (\n    <tr className={isDone ? 'off' : ''}>\n      <td>\n        <input type=\"checkbox\" checked={isDone} onChange={toggleDone}/>\n      </td>\n      <td>{word.eng}</td>\n      <td>{isShow && word.kor}</td>\n      <td>\n        <button onClick={toggleShow}>뜻 {isShow ? \"숨기기\" : \"보기\"}</button>\n        <button className=\"btn_del\" onClick={del}>삭제</button>\n      </td>\n    </tr>\n  );\n}","// import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useFetch from '../hooks/useFetch';\nimport Word from './Word';\n\nexport default function Day(){\n  const { day } = useParams();\n  const words = useFetch(`http://localhost:3001/words?day=${day}`);\n\n  return (\n    <>\n    <h2>Day {day}</h2>\n    {words.length === 0 && <span>Loading...</span>}\n      <table>\n        <tbody>\n          {words.map(word => (\n            <Word word={word} key={word.id} />\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n}","// import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n// import dummy from '../db/data.json';\nimport useFetch from '../hooks/useFetch';\n\nexport default function DayList(){\n  const days = useFetch('http://localhost:3001/days');\n\n  if (days.length === 0){\n    return <span>Loading...</span>;\n  }\n\n  return (\n    <ul className=\"list_day\">\n      {days.map(day => (\n        <li key={day.id}>\n          <Link to={`/day/${day.day}`}>Day {day.day}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n}","import { Link } from \"react-router-dom\";\n\nexport default function Header(){\n  return (\n    <div className=\"header\">\n      <h1>\n        <Link to=\"/\">토익 영단어(고급)</Link>\n      </h1>\n      <div className=\"menu\">\n        <Link to=\"/create_word\" className=\"link\">\n          단어 추가\n        </Link>\n        <Link to=\"/create_day\" className=\"link\">\n          Day 추가\n        </Link>\n      </div>\n    </div>\n  );\n}","import { Link } from 'react-router-dom';\n\nexport default function EmptyPage(){\n  return (\n    <>\n      <h2>잘못된 접근입니다.</h2>\n      <Link to=\"/\">돌아가기</Link>   \n    </>\n  );\n}","import { useState, useRef } from 'react';\nimport { useHistory } from 'react-router';\nimport useFetch from '../hooks/useFetch';\nexport default function CreateWord(){\n  const days = useFetch('http://localhost:3001/days');\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n\n  function onSubmit(e){\n    e.preventDefault();\n\n    if (!isLoading) {\n      setIsLoading(true);\n      fetch(`http://localhost:3001/words`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          day : dayRef.current.value,\n          eng : engRef.current.value,\n          kor : korRef.current.value,\n          isDone : false,\n        }),\n      })\n      .then(res => {\n        if (res.ok){\n          alert(\"생성이 완료되었습니다.\");\n          history.push(`/day/${dayRef.current.value}`);\n          setIsLoading(false);\n        }\n      })\n    }\n  }\n  \n  const engRef = useRef(null);\n  const korRef = useRef(null);\n  const dayRef = useRef(null);\n\n  return (\n    <form onSubmit={onSubmit}>\n      <div className=\"input_area\">\n        <label>Eng</label>\n        <input type=\"text\" placeholder=\"computer\" ref={engRef}></input>\n      </div>\n      <div className=\"input_area\">\n        <label>Kor</label>\n        <input type=\"text\" placeholder=\"컴퓨터\" ref={korRef}></input>\n      </div>\n      <div className=\"input_area\">\n        <label>Day</label>\n        <select ref={dayRef}> \n          {days.map(day =>(\n            <option key={day.id} value={day.day}>\n              {day.day}\n            </option>\n          ))}\n        </select>\n      </div>\n      <button style={{ opacity : isLoading ? 0.3 : 1 }}>{isLoading ? \"Saving...\" : \"저장\"}</button>\n    </form>\n  );\n}","import { useHistory } from 'react-router';\nimport useFetch from '../hooks/useFetch';\n\nexport default function CreateDay(){\n  const days = useFetch('http://localhost:3001/days');\n  const history = useHistory();\n\n  function addDay(){\n    fetch('http://localhost:3001/days', {\n      method : \"POST\",\n      headers : {\n        \"Content-Type\" : \"application/json\",\n      },\n      body : JSON.stringify({\n        day: days.length + 1,\n      })\n    }).then(res => {\n      if (res.ok){\n        alert(\"생성이 완료되었습니다.\");\n        history.push('/');\n      }\n    })\n  }\n\n  return (\n    <div>\n      <h3>현재 일수 : {days.length}일</h3>\n      <button onClick={addDay}>Day 추가</button>\n    </div>\n  );\n}","import Day from './component/Day';\nimport DayList from './component/DayList';\nimport Header from './component/Header';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport EmptyPage from './component/EmptyPage';\nimport CreateWord from './component/CreateWord';\nimport CreateDay from './component/CreateDay';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <DayList />\n          </Route>\n          <Route path=\"/day/:day\">\n           <Day />\n          </Route>\n          <Route path=\"/create_word\">\n           <CreateWord />\n          </Route>\n          <Route path=\"/create_day\">\n           <CreateDay />\n          </Route>\n          <Route>\n            <EmptyPage />\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}