{"version":3,"sources":["components/AddNumber.jsx","components/AddNumberRoot.jsx","components/DisplayNumber.jsx","components/DisplayNumberRoot.jsx","App.js","reportWebVitals.js","index.js"],"names":["AddNumber","state","size","type","value","this","onChange","e","setState","target","bind","onClick","props","Component","AddNumberRoot","DisplayNumber","number","readOnly","DisplayNumberRoot","App","className","parseInt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPACqBA,E,4MACnBC,MAAQ,CAAEC,KAAM,G,4CAChB,WACE,OACE,gCACE,4CACA,uBAAOC,KAAK,OAAOC,MAAOC,KAAKJ,MAAMC,KAAMI,SAAU,SAAUC,GAC7DF,KAAKG,SAAS,CAAEN,KAAMK,EAAEE,OAAOL,SAC/BM,KAAKL,QACP,uBAAOF,KAAK,SAASC,MAAM,IAAIO,QAAS,WACtCN,KAAKO,MAAMD,QAAQN,KAAKJ,MAAMC,MAC9BG,KAAKG,SAAS,CAAEN,KAAM,KACtBQ,KAAKL,e,GAZwBQ,aCClBC,E,4JACnB,WACE,OACE,gCACE,iDACA,cAAC,EAAD,CAAWH,QAAS,SAAUT,GAC5BG,KAAKO,MAAMD,QAAQT,IACnBQ,KAAKL,e,GAP4BQ,aCDtBE,E,4JACnB,WACE,OACE,gCACE,gDACA,uBAAOZ,KAAK,OAAOC,MAAOC,KAAKO,MAAMI,OAAQC,UAAQ,W,GALlBJ,aCCtBK,E,4JACnB,WACE,OACE,gCACE,qDACA,cAAC,EAAD,CAAeF,OAAQX,KAAKO,MAAMI,gB,GALKH,aCoBhCM,E,4MAfblB,MAAQ,CAACe,OAAO,G,4CAChB,WACE,OACE,sBAAKI,UAAU,MAAf,UACE,sCACD,cAAC,EAAD,CAAeT,QAAS,SAAST,GAC/BG,KAAKG,SAAS,CAACQ,OAAQX,KAAKJ,MAAMe,OAASK,SAASnB,MACpDQ,KAAKL,QACP,cAAC,EAAD,CAAmBW,OAAQX,KAAKJ,MAAMe,gB,GAT3BH,aCMHS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5d3a6ae2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport default class AddNumber extends Component {\n  state = { size: 1 }\n  render() {\n    return (\n      <div>\n        <h1>Add Number</h1>\n        <input type=\"text\" value={this.state.size} onChange={function (e) {\n          this.setState({ size: e.target.value });\n        }.bind(this)}></input>\n        <input type=\"button\" value=\"+\" onClick={function () {\n          this.props.onClick(this.state.size);\n          this.setState({ size: 0 });\n        }.bind(this)}></input>\n\n      </div >\n    )\n  }\n}","import React, { Component } from 'react';\nimport AddNumber from '../components/AddNumber';\nexport default class AddNumberRoot extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Add Number Root</h1>\n        <AddNumber onClick={function (size) {\n          this.props.onClick(size);\n        }.bind(this)}></AddNumber>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nexport default class DisplayNumber extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Display Number</h1>\n        <input type=\"text\" value={this.props.number} readOnly></input>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport DisplayNumber from '../components/DisplayNumber';\nexport default class DisplayNumberRoot extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Display Number Root</h1>\n        <DisplayNumber number={this.props.number}></DisplayNumber>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport AddNumberRoot from './components/AddNumberRoot';\nimport DisplayNumberRoot from './components/DisplayNumberRoot';\n\n\nclass App extends Component {\n  state = {number:0}\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Root</h1>\n       <AddNumberRoot onClick={function(size){\n         this.setState({number: this.state.number + parseInt(size)});\n       }.bind(this)}></AddNumberRoot>\n       <DisplayNumberRoot number={this.state.number}></DisplayNumberRoot>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}